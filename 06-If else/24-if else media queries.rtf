{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 Calibri;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\ri720

\f0\fs24 \cf0 http://www.sitepoint.com/managing-responsive-breakpoints-sass/\
\
Now that you have a grasp of mixins and if/else individually, and presuming you know a thing or two about media queries, what if we put these elements together in our document?\
\
Media queries are kind of the ultimate if statement. If the screen resolution fits our parameters, whatever they are, then we execute certain styles. If we\'92re not within those parameters, then we skip right over them.\
\
We can write one big mixin to control our media queries. Consider that right now, our media queries have hard-coded breakpoints, not under control of variables, and each media query is written by hand. Let\'92s centralize some of this in a mixin for all of our media queries.\
\
First, let\'92s set up the variables:\
\
//Media query values\
$small: 34.375em; //550px\
$sm-medium: 53.063em; //849px\
$medium: 53.125em; //850px\
\
Then let\'92s substitute the variables into the media queries:\
\
@media (min-width: $small)\
@media (min-width: $small) and (max-width: $sm-medium)\
@media (min-width: $medium)\
\
\
OK, now that we\'92ve centralized those breakpoints, let\'92s think about how this might work in a mixin.\
\
We need to take our breakpoint value and generate a media query based on what it is. We have three distinct breakpoint values and three media queries. A series of if/else statements should make this work. \
\
@mixin mq ($breakpoint: $small) \{\
  @if $breakpoint == $small \{\
    @media (min-width: $small) \{\
      @content;\
    \}\
  \}\
  @else if $breakpoint == $sm-medium \{\
    @media (min-width: $small) and (max-width: $sm-medium) \{\
      @content;\
    \}\
  \}\
  @else \{\
    @media (min-width: $medium) \{\
      @content;\
    \}\
  \}\
\}\
\
\
@include mq($small)\
@include mq ($sm-medium)\
@include mq($medium)\
\
What does @content do? That just says whatever is inside the curly braces already, write it here.\
}