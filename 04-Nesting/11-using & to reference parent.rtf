{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 Calibri;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\ri720

\f0\fs24 \cf0 On occasion, you run into a situation with nesting where it doesn\'92t work quite how you\'92d expect.\
\
For example, let\'92s consider the link styles around line 26. We can nest these styles easily:\
\
a \{\
  color: #00c4c7;\
  \
  :hover \{\
  color: #c80060;\
  text-decoration: none;\
\}\
\}\
\
compiles to:\
a \{\
  color: #00c4c7;\
\}\
a :hover \{\
  color: #c80060;\
  text-decoration: none;\
\}\
\
Note the space between the a and the :hover. That\'92s not the same selector as a:hover. A space :hover indicates an element hovered over within an a tag, while a:hover indicates the a itself is hovered over. It\'92s a fine distinction, but the selector we have now would only work if we have another tag inside of our a tags.\
\
To get around this problem, where we\'92re nesting selectors that aren\'92t necessarily descendent selectors, the & character indicates that we should insert the outside selector in that location. Adjusting our SCSS produces the CSS we want.\
\
a \{\
  color: $primary-color;\
\
  &:hover \{\
    color: $secondary-color;\
    text-decoration: none;\
  \}\
\}\
}